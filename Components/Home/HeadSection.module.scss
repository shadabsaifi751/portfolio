// @import "_mixins";

@mixin glitchCopy {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.main {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  // padding: 6rem;
  min-height: 500px;
  position: relative;

  h1 {
    &.glitch {
      position: absolute;
      top: 30%;
      // left: 50%;
      transform: translateX(-50%);
      font-size: 48px;
      font-weight: 300;
      color: white;
      // font-size: 4em;
      letter-spacing: 0.1em;
      animation: glitch-skew 1s infinite linear alternate-reverse;
      @media (max-width: 768px) {
        // top: 40%;
        font-size: 26px;
      }
      @media (max-width: 360px) {
        // top: 40%;
        font-size: 18px;
      }
      &::before {
        @include glitchCopy;
        left: 2px;
        text-shadow: -2px 0 #0f0;
        clip: rect(44px, 450px, 56px, 0);
        animation: glitch-anim 5s infinite linear alternate-reverse;
      }

      // Creates a copy after our text. Note comments from ::before.
      &::after {
        @include glitchCopy;
        left: -2px;
        text-shadow: -2px 0 #00fff9, 2px 2px #0f0;
        animation: glitch-anim2 1s infinite linear alternate-reverse;
      }
    }

    @keyframes glitch-anim {
      $steps: 20;
      @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
          clip: rect(random(100) + px, 9999px, random(100) + px, 0);
          transform: skew((random(100) / 100) + deg);
        }
      }
    }

    // Same deal, just duplicated for ultra randomness.
    @keyframes glitch-anim2 {
      $steps: 20;
      @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
          clip: rect(random(100) + px, 9999px, random(100) + px, 0);
          transform: skew((random(100) / 100) + deg);
        }
      }
    }

    // Does the same deal as before, but now only skews. Used for main text.
    @keyframes glitch-skew {
      $steps: 10;
      @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
          transform: skew((random(10) - 5) + deg);
        }
      }
    }
  }
  h2 {
    position: absolute;
    top: 35%;
    left: 50%;
    transform: translateX(-50%);
  }
}
